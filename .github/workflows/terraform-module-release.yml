name: TERRAFORM MODULE RELEASE

on:
  workflow_call:
    inputs:
      toggle_branch_protection:
        description: 'Temporary disable branch protection to allow release action to push updates to changelog'
        default: true
        required: false
        type: boolean
      semantic_version:
        description: 'Specify specifying version range for semantic-release'
        default: '18.0.0'
        required: false
        type: string
      semantic_release_config:
        description: 'Shareable config to create release of Terraform Modules'
        default: '@nuvibit/github-terraform-semantic-release-config'
        required: false
        type: string
      release_branch:
        description: 'Name of branch on which Terraform Module release should happen'
        default: 'main'
        required: false
        type: string
      concurrency_group:
        description: 'Name of concurrency group to manage concurrent github action runs'
        default: ${{ github.repository }}/${{ github.event.pull_request.head.ref || github.ref }}
        required: false
        type: string
    secrets:
      GHE_API_TOKEN:
        required: true

# Ensures that only one workflow runs at a time
concurrency: ${{ inputs.concurrency_group }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Check Branch Protection
        if: ${{ inputs.toggle_branch_protection }}
        uses: octokit/request-action@v2.x
        id: get_branch_protection
        continue-on-error: true
        with:
          route: GET /repos/${{ github.repository }}/branches/${{ inputs.release_branch }}/protection
        env:
          GITHUB_TOKEN: ${{ secrets.GHE_API_TOKEN }}
      
      - name: Temporarily Disable Branch Protection
        if: ${{ inputs.toggle_branch_protection && steps.get_branch_protection.outputs.status == '200' }}
        uses: octokit/request-action@v2.x
        id: disable_branch_protection
        with:
          route: PUT /repos/${{ github.repository }}/branches/${{ inputs.release_branch }}/protection
          required_status_checks: |
            null
          enforce_admins: |
            false
          required_pull_request_reviews: |
            null
          restrictions: |
            null
        env:
          GITHUB_TOKEN: ${{ secrets.GHE_API_TOKEN }}

      - name: Release Terraform Module
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          semantic_version: ${{ inputs.semantic_version }}
          branch: ${{ inputs.release_branch }}
          extends: |
            ${{ inputs.semantic_release_config }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable Branch Protection
        if: ${{ always() && inputs.toggle_branch_protection && steps.get_branch_protection.outputs.status == '200' }}
        uses: octokit/request-action@v2.x
        id: enable_branch_protection
        with:
          route: PUT /repos/${{ github.repository }}/branches/${{ inputs.release_branch }}/protection
          required_status_checks: |
            {
              "strict": ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).required_status_checks.strict) || null }},
              "checks": ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).required_status_checks.checks) || null }}
            }
          enforce_admins: |
            ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).enforce_admins.enabled) || null }}
          required_pull_request_reviews: |
            ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).required_pull_request_reviews) || null }}
          restrictions: |
            ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).restrictions) || null }}
          required_linear_history: |
            ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).required_linear_history.enabled) || null }}
          allow_force_pushes: |
            ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).allow_force_pushes.enabled) || null }}
          allow_deletions: |
            ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).allow_deletions.enabled) || null }}
          block_creations: |
            ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).block_creations.enabled) || null }}
          required_conversation_resolution: |
            ${{ toJson(fromJson(steps.get_branch_protection.outputs.data).required_conversation_resolution.enabled) || null }}
        env:
          GITHUB_TOKEN: ${{ secrets.GHE_API_TOKEN }}

      - name: Workflow Summary
        if: ${{ always() }}
        env:
          TOGGLE_BRANCH_PROTECTION: ${{ fromJSON('[":white_check_mark:", ":x:"]')[inputs.toggle_branch_protection && steps.get_branch_protection.outputs.status == '200'] }}
          NEW_RELEASE_PUBLISHED: ${{ fromJSON('[":white_check_mark:", ":x:"]')[steps.semantic.outputs.new_release_published != 'true'] }}
          LAST_RELEASE_VERSION: ${{ steps.semantic.outputs.last_release_version }}
          NEW_RELEASE_VERSION: ${{ steps.semantic.outputs.new_release_version }}
        run: |
          echo '### WORKFLOW SUMMARY :octocat:' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '| result | job |' >> $GITHUB_STEP_SUMMARY
          echo '|---|---|' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.NEW_RELEASE_PUBLISHED }} | new release published |' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.LAST_RELEASE_VERSION }} | last release version |' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.NEW_RELEASE_VERSION }} | new release version |' >> $GITHUB_STEP_SUMMARY
