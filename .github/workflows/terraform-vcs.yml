name: TERRAFORM VCS

on:
  workflow_call:
    inputs:
      github_runner:
        description: 'Name of GitHub-hosted runner or self-hosted runner'
        default: 'ubuntu-latest'
        required: false
        type: string
      terraform_version:
        description: 'Terraform version used inside github action'
        default: 'latest'
        required: false
        type: string
      terraform_working_directory:
        description: 'A relative path starting with "." that Terraform will execute within (e.g. "./infrastructure")'
        default: '.'
        required: false
        type: string
      tflint_repo:
        description: 'Public repo where tflint config is stored'
        default: 'nuvibit/github-tflint-config'
        required: false
        type: string
      tflint_repo_config_path:
        description: 'Path to tflint config in tflint_repo (e.g. "aws/.tflint.hcl")'
        default: ''
        required: false
        type: string
      tflint_repo_ref:
        description: 'Ref or branch of tflint_repo'
        default: 'main'
        required: false
        type: string
      tflint_version:
        description: 'Tflint version to use in github action'
        default: 'latest'
        required: false
        type: string
      trivy_version:
        description: 'Trivy version to use in github action'
        default: 'latest'
        required: false
        type: string
      commit_user:
        description: 'Username which should be used for commits by github action'
        default: 'github-actions'
        required: false
        type: string
      commit_email:
        description: 'Email which should be used for commits by github action'
        default: 'noreply@github.com'
        required: false
        type: string
      concurrency_group:
        description: 'Name of concurrency group to manage concurrent github action runs'
        default: ${{ github.repository }}/${{ github.event.pull_request.head.ref || github.ref }}/${{ inputs.terraform_working_directory }}
        required: false
        type: string
    secrets:
      GHE_API_TOKEN:
        required: true

# Ensures that only one workflow runs at a time
concurrency: ${{ inputs.concurrency_group }}

jobs:
  terraform-fmt:
    runs-on: ${{ inputs.github_runner }}
    outputs:
      fmt_status: ${{ steps.fmt.outcome }}
      diff_exists: ${{ steps.fmt_commit.outputs.diff }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          token: ${{ secrets.GHE_API_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive
        working-directory: ${{ inputs.terraform_working_directory }}

      - name: Commit files
        id: fmt_commit
        run: |
          git config --local user.name "${{ inputs.commit_user }}"
          git config --local user.email "${{ inputs.commit_email }}"
          if [[ -z $(git status -s) ]]; then
            echo "diff=false" >> $GITHUB_OUTPUT
          else
            echo "diff=true" >> $GITHUB_OUTPUT
          fi
          git diff-index --quiet HEAD || git commit -m "style(terraform fmt): format code" -a

      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.pull_request.head.ref || github.ref }}

  terraform-docs:
    needs:
      - terraform-fmt
    if: ${{ needs.terraform-fmt.outputs.diff_exists == 'false' }}
    runs-on: ${{ inputs.github_runner }}
    outputs:
      docs_status: ${{ steps.docs.outcome }}
      diff_exists: ${{ steps.docs.outputs.num_changed > 0 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          token: ${{ secrets.GHE_API_TOKEN }}

      - name: Terraform Docs
        id: docs
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: ${{ inputs.terraform_working_directory }}
          output-file: README.md
          output-method: inject
          args: --sort-by required
          git-push: true
          git-push-user-name: ${{ inputs.commit_user }}
          git-push-user-email: ${{ inputs.commit_email }}
          git-commit-message: "docs(terraform-docs): update readme"

  terraform-lint:
    needs:
      - terraform-fmt
      - terraform-docs
    if: ${{ needs.terraform-fmt.outputs.diff_exists == 'false' && needs.terraform-docs.outputs.diff_exists == 'false' }}
    runs-on: ${{ inputs.github_runner }}
    outputs:
      lint_status: ${{ steps.lint.outcome }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          token: ${{ secrets.GHE_API_TOKEN }}

      - name: Get TFLint Config
        uses: terraform-linters/tflint-load-config-action@v2
        if: ${{ inputs.tflint_repo_config_path != '' }}
        with:
          source-repo: ${{ inputs.tflint_repo }}
          source-path: ${{ inputs.tflint_repo_config_path }}
          source-ref: ${{ inputs.tflint_repo_ref }}
          destination-path: .tflint.hcl

      - name: Run TFLint
        uses: reviewdog/action-tflint@v1
        id: lint
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          working_directory: ${{ inputs.terraform_working_directory }}
          tflint_version: ${{ inputs.tflint_version }}
          reporter: github-pr-check
          fail_on_error: true
          filter_mode: nofilter
          level: error
          flags: ""
          tflint_init: true

  terraform-security:
    needs:
      - terraform-fmt
      - terraform-docs
      - terraform-lint
    if: ${{ needs.terraform-fmt.outputs.diff_exists == 'false' && needs.terraform-docs.outputs.diff_exists == 'false' }}
    runs-on: ${{ inputs.github_runner }}
    outputs:
      security_status: ${{ steps.security.outcome }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          token: ${{ secrets.GHE_API_TOKEN }}
      
      - name: Run Trivy
        uses: reviewdog/action-trivy@v1
        id: security
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          working_directory: ${{ inputs.terraform_working_directory }}
          reporter: github-pr-check
          fail_on_error: true
          filter_mode: nofilter
          level: error
          flags: ""
          trivy_flags: ""
          trivy_command: config
          trivy_target: .
          trivy_version: ${{ inputs.trivy_version }}

  workflow-summary:
    needs:
      - terraform-fmt
      - terraform-docs
      - terraform-lint
      - terraform-security
    runs-on: ${{ inputs.github_runner }}
    if: ${{ always() }}

    steps:
      - name: Workflow Summary
        env:
          TERRAFORM_VERSION: ${{ inputs.terraform_version }}
          TF_FMT_RESULT: ${{ fromJSON('[":white_check_mark:", ":x:"]')[needs.terraform-fmt.outputs.fmt_status != 'success'] }}
          TF_DOCS_RESULT: ${{ fromJSON('[":white_check_mark:", ":x:"]')[needs.terraform-docs.outputs.docs_status != 'success'] }}
          TF_LINT_RESULT: ${{ fromJSON('[":white_check_mark:", ":x:"]')[needs.terraform-lint.outputs.lint_status != 'success'] }}
          TF_SECURITY_RESULT: ${{ fromJSON('[":white_check_mark:", ":x:"]')[needs.terraform-security.outputs.security_status != 'success'] }}
        run: |
          echo '### WORKFLOW SUMMARY :octocat:' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '| result | job |' >> $GITHUB_STEP_SUMMARY
          echo '|---|---|' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.TF_FMT_RESULT }} | terraform format |' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.TF_DOCS_RESULT }} | terraform docs |' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.TF_LINT_RESULT }} | terraform lint |' >> $GITHUB_STEP_SUMMARY
          echo '| ${{ env.TF_SECURITY_RESULT }} | terraform security |' >> $GITHUB_STEP_SUMMARY
